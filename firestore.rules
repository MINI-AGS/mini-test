rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Función básica para verificar los campos mínimos necesarios
    function hasRequiredFields(data) {
      return data.gender is string &&
        data.interviewDate is timestamp &&
        data.startTimeInterview is string &&
        data.endTimeInterview is string &&
        data.durationInterview is string;
    }
    
    // Función para verificar que los arrays de sustancias contengan valores permitidos
    function containsOnlyAllowedValues(array, allowedValues) {
      return array is list && array.size() >= 0 && 
        array.removeAll(allowedValues).size() == 0;
    }
    
    // Listas de valores permitidos para sustancias (mantenidas para verificación básica)
    function getAllowedEstimulantes() {
      return ['anfetaminas', 'speed', 'cristal', 'dexedrina', 'ritalina', 'píldoras adelgazantes'];
    }
    
    function getAllowedCocaina() {
      return ['inhalada', 'intravenosa', 'crack', 'speedball'];
    }
    
    function getAllowedNarcoticos() {
      return ['heroína', 'morfina', 'Dilaudid', 'opio', 'Demerol', 'metadona', 'codeína', 'Percodan', 'Darvon'];
    }
    
    function getAllowedAlucinogenos() {
      return ['LSD (ácido)', 'mescalina', 'peyote', 'PCP (polvo de ángel, peace pill)', 'psilocybin', 'STP', 'hongos', 'éxtasis', 'MDA', 'MDMA'];
    }
    
    function getAllowedInhalantes() {
      return ['pegamento', 'éter', 'óxido nitroso (laughing gas)', 'amyl o butyl nitrate (poppers)'];
    }
    
    function getAllowedMarihuana() {
      return ['hachís', 'THC', 'pasto', 'hierba', 'mota', 'reefer'];
    }
    
    function getAllowedTranquilizantes() {
      return ['Qualude', 'Seconal (<<reds>>)', 'Valium', 'Xanax', 'Librium', 'Ativan', 'Dalmane', 'Halción', 'barbitúricos', '<<Miltown>>', 'Tranquimazin', 'Lexatin', 'Orfidal'];
    }
    
    // Verificación básica de sustancias
    function isValidSustancias(data) {
      return (!('questionK_Estimulantes_list' in data) || containsOnlyAllowedValues(data.questionK_Estimulantes_list, getAllowedEstimulantes())) &&
             (!('questionK_Cocaina_list' in data) || containsOnlyAllowedValues(data.questionK_Cocaina_list, getAllowedCocaina())) &&
             (!('questionK_Narcoticos_list' in data) || containsOnlyAllowedValues(data.questionK_Narcoticos_list, getAllowedNarcoticos())) &&
             (!('questionK_Alucinoginos_list' in data) || containsOnlyAllowedValues(data.questionK_Alucinoginos_list, getAllowedAlucinogenos())) &&
             (!('questionK_Inhalantes_list' in data) || containsOnlyAllowedValues(data.questionK_Inhalantes_list, getAllowedInhalantes())) &&
             (!('questionK_Marihuana_list' in data) || containsOnlyAllowedValues(data.questionK_Marihuana_list, getAllowedMarihuana())) &&
             (!('questionK_Tranquilizantes_list' in data) || containsOnlyAllowedValues(data.questionK_Tranquilizantes_list, getAllowedTranquilizantes())) &&
             (!('questionK_OtrasSustancias_list' in data) || data.questionK_OtrasSustancias_list is list);
    }
    
    // Reglas para la colección de datos
    match /data/{documentId} {
      // Permitir lectura a nadie
      allow get, list: if false; // admin-sdk can bypass
      
      // Permitir eliminación a nadie
      allow delete: if false; // admin-sdk can bypass
      
      // Validar solo campos críticos en la creación
      allow create: if hasRequiredFields(request.resource.data) && 
                     isValidSustancias(request.resource.data);
      
      // Impedir actualizaciones 
      allow update: if false; // admin-sdk can bypass
    }
    
    // Reglas para ejemplos (sin cambios)
    match /ejemplos/{documentId} {
      allow get, list, delete, create, update: if true;
    }
    
    // Reglas para ejemplos solo para admins (script de python)
    match /ejemplos2/{documentId} {
      allow get, list, delete, create, update: if false;
    }
    
    // Reglas para todas las demás colecciones
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
